<?php
/**
 * @file
 * Code for the Hedley Repository feature.
 */

/**
 * Performs an HTTP request to GitHub and check for errors.
 *
 * @param string $url
 *   A string containing the resource path, without the full api base URL to
 *   allow easier mocking of GitHub services.
 * @param array $options
 *   Options array as passed to drupal_http_request().
 * @param bool $decode
 *   Determines if response should be decoded. Defaults to TRUE.
 *
 * @return object
 *   The result object.
 *
 * @see drupal_http_request().
 */
function hedley_github_http_request($url, array $options, $decode = TRUE) {
  $prefix = variable_get('hedley_github_api_base_url', 'https://api.github.com/');
  if ($decode) {
    // Get results wrapped in a JSON function, both data and headers.
    // @see https://developer.github.com/v3/#json-p-callbacks
    $url .= strpos($url, '?') === FALSE ? '?callback=result' : '&callback=result';
  }

  $result = drupal_http_request($prefix . $url, $options);
  hedley_github_check_response_http_error($url, $result);

  if (!$decode) {
    return $result;
  }
  else {
    // Get the data from JSON.

    $data = str_replace('/**/result(', '', $result->data);
    $data = rtrim($data, ")");

    $result = drupal_json_decode($data);

    $meta = $result['meta'];
    $data = $result['data'];

    return array('data' => $data, 'meta' => $meta);
  }
}


/**
 * Check if an error was returned by Github, and if so throw an exception.
 *
 * GitHub might return a 200 code, but the data is in fact an error.
 *
 * @param string $url
 *   The URL sent to GitHub
 * @param $result
 *   The result object from the drupal_http_request() call.
 *
 * @throws \RestfulServerConfigurationException
 */
function hedley_github_check_response_http_error($url, $result) {
  if (intval($result->code) !== 200 || strpos($result->data, 'error=') === 0) {

    $params = array(
      '@url' => $url,
      '@code' => $result->code,
      '@error' => $result->data,
    );

    $message = format_string('Calling @url resulted with a @code HTTP code, with the following error message: @error', $params);

    $exception_class = strpos($result->data, 'error=bad_verification_code') === 0 ? 'RestfulBadRequestException' : 'RestfulServerConfigurationException';
    throw new $exception_class($message);
  }
}

/**
 * Get the valid result from the response of the HTTP request.
 *
 * Result format is for example:
 * 'access_token=someTokenValue&scope=&token_type=bearer';
 *
 * @param $result
 *   The result object from the drupal_http_request() call.
 *
 * @return string
 *   The result.
 */
function hedley_github_get_data_from_http_result($result) {
  $return = $result->data;

  $return = explode('&', $result->data);
  $return = explode('=', $return[0]);
  return $return[1];
}
